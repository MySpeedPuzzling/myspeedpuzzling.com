{% extends 'base.html.twig' %}

{% block title %}Přidat čas{% endblock %}

{% block content %}
    <h1>Přidat čas</h1>

    {{ form_start(add_puzzle_solving_time_form) }}
        {{ form_errors(add_puzzle_solving_time_form) }}

        <div class="row pb-4">
            <div class="col-lg-6 offset-lg-1 order-lg-2">
                {% if active_puzzle is not null %}
                    <h5>Vybrané puzzle:</h5>

                    {% if active_puzzle.puzzleAlternativeName is not null %}
                        {{ active_puzzle.puzzleAlternativeName }}
                        <small>({{ active_puzzle.puzzleName }})</small>
                    {% else %}
                        {{ active_puzzle.puzzleName }}
                    {% endif %}
                    <br>
                    <b>{{ active_puzzle.manufacturerName|upper }}</b><br>
                    {{ active_puzzle.piecesCount }} dílků<br>

                    {% if active_puzzle.puzzleImage is not null%}
                        <p>
                            <img class="rounded-2" style="max-width: 200px;max-height: 200px;" src="{{ active_puzzle.puzzleImage|imagine_filter('puzzle_medium') }}">
                        </p>
                    {% endif %}

                    {% if active_puzzle.fastestTime is not null %}
                        Nejrychlejší čas: {{ active_puzzle.fastestTime|puzzlingTime }}<br>
                        Průměrný čas: {{ active_puzzle.averageTime|puzzlingTime }}<br>
                        Počet složení: {{ active_puzzle.solvedTimes }}
                    {% endif %}
                {% endif %}

                <div {% if active_puzzle is not null %}style="display: none;"{% endif %}>
                    <div class="form-switch mb-4">
                        {{ form_widget(add_puzzle_solving_time_form.addPuzzle) }}
                    </div>

                    <div id="existing-puzzle-form">
                        <h3 class="h5 required">Vyberte puzzle</h3>

                        <div id="add-puzzle-chosen" class="hidden pb-3">
                            <ul id="add-puzzle-chosen-item" class="widget-list"></ul>

                            <button class="btn btn-sm btn-outline-primary" id="change-link">Změnit výběr</button>
                        </div>

                        <div id="add-puzzle-form">
                            <p><small class="text-muted">Pokud puzzle v seznamu nenajdete, přidejte prosím informace ručně.</small></p>

                            <div class="widget widget-categories mb-4">
                                {{ form_errors(add_puzzle_solving_time_form.puzzleId) }}

                                <div id="puzzle-manufacturers" class="accordion">
                                    {% for manufacturerName, manufacturerPuzzles in puzzles %}
                                        <div class="accordion-item">
                                            <h3 class="accordion-header">
                                                <a href="#{{ manufacturerName|slug }}" class="accordion-button collapsed" role="button" data-bs-toggle="collapse" aria-expanded="false" aria-controls="{{ manufacturerName|slug }}">
                                                    {{ manufacturerName|upper }}
                                                </a>
                                            </h3>
                                            <div id="{{ manufacturerName|slug }}" class="accordion-collapse collapse" data-bs-parent="#puzzle-manufacturers">
                                                <div class="accordion-body">
                                                    <div class="widget widget-links {% if manufacturerPuzzles|length > 7 %}widget-filter{% endif %}">
                                                        {% if manufacturerPuzzles|length > 7 %}
                                                            <div class="input-group input-group-sm mb-2">
                                                                <input type="text" class="widget-filter-search form-control rounded-end" placeholder="Hledat">
                                                                <i class="ci-search position-absolute top-50 end-0 translate-middle-y fs-sm me-3"></i>
                                                            </div>
                                                        {% endif %}

                                                        <ul class="widget-list {% if manufacturerPuzzles|length > 7 %}widget-filter-list pt-1{% endif %}" {% if manufacturerPuzzles|length > 7 %}style="height: 18rem;" data-simplebar data-simplebar-auto-hide="false"{% endif %}>
                                                            {% for puzzle in manufacturerPuzzles %}
                                                                <li class="widget-list-item mb-2 {% if manufacturerPuzzles|length > 7 %}widget-filter-item{% endif %}">

                                                                    <div class="form-check d-flex align-items-center">
                                                                        <div class="me-1 checkbox-wrapper">
                                                                            <input class="form-check-input" type="radio" id="{{ puzzle.puzzleId }}" name="{{ field_name(add_puzzle_solving_time_form.puzzleId) }}" value="{{ puzzle.puzzleId }}">
                                                                        </div>
                                                                        <label class="form-check-label widget-filter-item-text d-flex align-items-center" for="{{ puzzle.puzzleId }}">
                                                                            {% if puzzle.puzzleImage is not null %}
                                                                                <img class="rounded-2 me-2" src="{{ puzzle.puzzleImage|imagine_filter('puzzle_small') }}" style="max-width: 50px;float: left;">
                                                                            {% endif %}
                                                                            <span style="display: inline-block;">
                                                                                {% if puzzle.puzzleAlternativeName is not null %}
                                                                                    {{ puzzle.puzzleAlternativeName }} ({{ puzzle.puzzleName }})
                                                                                {% else %}
                                                                                    {{ puzzle.puzzleName }}
                                                                               {% endif %}
                                                                                <br>
                                                                                <span class="fs-xs text-muted">{{ puzzle.piecesCount }} dílků</span>
                                                                            </span>
                                                                        </label>
                                                                    </div>
                                                                </li>
                                                            {% endfor %}
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    {% endfor %}
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="custom-puzzle-form">
                        <p>
                            <small class="text-muted">Nově přidané puzzle se budou veřejně zobrazovat až po schválení administrátorem - obvykle do 24 hodin od přidání.</small>
                        </p>

                        {{ form_row(add_puzzle_solving_time_form.puzzleName) }}
                        {{ form_row(add_puzzle_solving_time_form.puzzleManufacturerId) }}
                        <div id="manufacturer-name-row">
                            {{ form_row(add_puzzle_solving_time_form.puzzleManufacturerName) }}
                        </div>
                        {{ form_row(add_puzzle_solving_time_form.puzzlePiecesCount) }}

                        {{ form_row(add_puzzle_solving_time_form.puzzleEan) }}
                        {{ form_row(add_puzzle_solving_time_form.puzzleIdentificationNumber) }}

                        {{ form_label(add_puzzle_solving_time_form.puzzlePhoto) }}
                        <div class="file-drop-area">
                            <div class="file-drop-icon ci-cloud-upload"></div>
                            <span class="file-drop-message">Přetáhněte sem soubor pro nahrání</span>
                            {{ form_widget(add_puzzle_solving_time_form.puzzlePhoto, {'attr': {'class': 'file-drop-input'}}) }}
                            <button type="button" class="file-drop-btn btn btn-primary btn-sm">Nebo vyberte soubor</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-5 order-lg-1">
                {% if active_stopwatch is not null %}
                    <div class="mb-3">
                        <span class="form-label">Čas ze stopek</span><br>
                        <span class="h5">{{ active_stopwatch.totalSeconds|puzzlingTime }}</span>
                    </div>
                {% endif %}

                {% if active_stopwatch is null %}
                    <div class="mb-3 time-input-wrap">
                        {{ form_label(add_puzzle_solving_time_form.time) }}
                        {{ form_errors(add_puzzle_solving_time_form.time) }}
                        <div class="input-group">
                            {{ form_widget(add_puzzle_solving_time_form.time, {'attr': {'class': 'form-control rounded pe-5'}}) }}
                            <i class="ci-time position-absolute top-50 end-0 translate-middle-y me-3"></i>
                        </div>
                        {{ form_help(add_puzzle_solving_time_form.time) }}
                    </div>
                {% endif %}

                <div class="mb-3 datepicker-input-wrap">
                    {{ form_label(add_puzzle_solving_time_form.finishedAt) }}
                    {{ form_errors(add_puzzle_solving_time_form.finishedAt) }}
                    <div class="input-group">
                        {{ form_widget(add_puzzle_solving_time_form.finishedAt, {'attr': {'class': 'form-control rounded date-picker pe-5', 'data-datepicker-options': '{"altInput": true, "altFormat": "d.m.Y", "dateFormat": "d.m.Y", "locale": "cs", "maxDate": "today"}'}}) }}
                        <i class="ci-calendar position-absolute top-50 end-0 translate-middle-y me-3"></i>
                    </div>
                    {{ form_help(add_puzzle_solving_time_form.finishedAt) }}
                </div>

                <div id="puzzlers-group"></div>

                <button id="add-puzzler" type="button" class="btn btn-sm btn-outline-primary mb-3"><i class="ci-add"></i> Přidat skládájícího</button>

                {{ form_row(add_puzzle_solving_time_form.comment) }}

                {{ form_label(add_puzzle_solving_time_form.solvedPuzzlesPhoto) }}
                <div class="file-drop-area">
                    <div class="file-drop-icon ci-cloud-upload"></div>
                    <span class="file-drop-message">Přetáhněte sem soubor pro nahrání</span>
                    {{ form_widget(add_puzzle_solving_time_form.solvedPuzzlesPhoto, {'attr': {'class': 'file-drop-input'}}) }}
                    <button type="button" class="file-drop-btn btn btn-primary btn-sm">Nebo vyberte soubor</button>
                </div>

                <input type="submit" name="submit" value="Uložit" class="btn btn-primary mt-3" />

            </div>
        </div>

    {{ form_end(add_puzzle_solving_time_form) }}

    <div id="puzzler-input-template">
        <div data-puzzler class="mb-3">
            <label class="form-label required">Spoluskládající <span data-counter></span></label>

            <div class="input-group">
                <input name="group_players[]" class="form-control" type="text">
                <button data-remove-player class="btn btn-white border btn-icon" type="button">
                    <i class="ci-trash text-danger"></i>
                </button>
            </div>
            <div class="form-text">Zadejte kód hráče (začíná na #)</div>
        </div>
    </div>


<script type="text/javascript">
    document.addEventListener('DOMContentLoaded', function() {
        // Get the checkbox element
        var checkbox = document.getElementById('add_puzzle_solving_time_form_addPuzzle');
        if (!checkbox) {
            checkbox = document.getElementById('save_stopwatch_form_addPuzzle');
        }

        // Function to toggle the visibility of forms
        function toggleForms() {
            var existingPuzzleForm = document.getElementById('existing-puzzle-form');
            var customPuzzleForm = document.getElementById('custom-puzzle-form');

            if (checkbox.checked) {
                // Checkbox is checked: show customPuzzleForm and hide existingPuzzleForm
                customPuzzleForm.style.display = 'block';
                existingPuzzleForm.style.display = 'none';
            } else {
                // Checkbox is not checked: show existingPuzzleForm and hide customPuzzleForm
                customPuzzleForm.style.display = 'none';
                existingPuzzleForm.style.display = 'block';
            }
        }

        // Call the function to set the initial state
        toggleForms();

        // Add event listener for checkbox changes
        checkbox.addEventListener('change', toggleForms);
    });

    document.addEventListener('DOMContentLoaded', function() {
        // Listen for changes on radio inputs within the add-puzzle-form element
        document.getElementById('add-puzzle-form').addEventListener('change', function(event) {
            if(event.target.type === 'radio') {
                // Add 'hidden' class to add-puzzle-form and remove it from add-puzzle-chosen
                document.getElementById('add-puzzle-form').classList.add('hidden');
                document.getElementById('add-puzzle-chosen').classList.remove('hidden');

                // Clone the nearest parent <li> element
                var clonedLi = event.target.closest('li').cloneNode(true);

                // Remove <input> elements from the cloned <li>
                var inputs = clonedLi.querySelectorAll('input');
                inputs.forEach(function(input) {
                    input.remove();
                });

                // Replace the content of add-puzzle-chosen-item with the modified cloned <li>
                var puzzleChosenItem = document.getElementById('add-puzzle-chosen-item');
                puzzleChosenItem.innerHTML = '';
                puzzleChosenItem.appendChild(clonedLi);

                setTimeout(function() {
                    document.getElementById('add-puzzle-chosen').scrollIntoView({
                        behavior: 'smooth'
                    });
                }, 100);
            }
        });

        // Listen for click event on the change-link button
        document.getElementById('change-link').addEventListener('click', function(event) {
            // Prevent default action (submitting form)
            event.preventDefault();

            // Toggle visibility of the two main elements
            document.getElementById('add-puzzle-chosen').classList.add('hidden');
            document.getElementById('add-puzzle-form').classList.remove('hidden');
        });
    });

    document.addEventListener('DOMContentLoaded', () => {
        const addPuzzlerBtn = document.getElementById('add-puzzler');
        const puzzlersGroup = document.getElementById('puzzlers-group');
        const puzzlerTemplate = document.getElementById('puzzler-input-template').innerHTML;
        let puzzlerCounter = 0;

        addPuzzlerBtn.addEventListener('click', () => {
            if (puzzlersGroup.children.length < 6) {
                puzzlersGroup.insertAdjacentHTML('beforeend', puzzlerTemplate);
                const newPuzzler = puzzlersGroup.lastElementChild;
                updateInputAndLabel(newPuzzler, ++puzzlerCounter);
                updateCounters();
                checkButtonVisibility();
            }
        });

        puzzlersGroup.addEventListener('click', (event) => {
            if (event.target.closest('[data-remove-player]')) {
                const puzzler = event.target.closest('[data-puzzler]');
                if (puzzler) {
                    puzzler.remove();
                    updateCounters();
                    checkButtonVisibility();
                }
            }
        });

        function updateInputAndLabel(newPuzzler, counter) {
            const input = newPuzzler.querySelector('input');
            const label = newPuzzler.querySelector('label');
            if (input && label) {
                const uniqueId = `playerInput-${counter}`;
                input.id = uniqueId;
                label.setAttribute('for', uniqueId);
            }
        }

        function updateCounters() {
            const counters = puzzlersGroup.querySelectorAll('[data-counter]');
            counters.forEach((counter, index) => {
                counter.innerHTML = index + 1;
            });
        }

        function checkButtonVisibility() {
            if (puzzlersGroup.children.length >= 6) {
                addPuzzlerBtn.classList.add('hidden');
            } else {
                addPuzzlerBtn.classList.remove('hidden');
            }
        }
    });

    document.addEventListener('DOMContentLoaded', function () {
        // Function to toggle the 'hidden' class
        function toggleHiddenClass() {
            var selectInput = document.querySelector('select[data-manufacturerId]');
            var targetElement = document.getElementById('manufacturer-name-row');

            if (selectInput && targetElement) {
                // Add or remove the 'hidden' class based on whether the select has a value
                if (selectInput.value) {
                    targetElement.classList.add('hidden');
                } else {
                    targetElement.classList.remove('hidden');
                }
            }
        }

        // Initially call the function when the page loads
        toggleHiddenClass();

        // Event listener for changes on the select input
        document.addEventListener('change', function (event) {
            if (event.target.matches('select[data-manufacturerId]')) {
                toggleHiddenClass();
            }
        });
    });

    document.addEventListener('DOMContentLoaded', function() {
        var form = document.querySelector('form');
        form.addEventListener('submit', function() {
            form.querySelector('[type="submit"]').setAttribute('disabled', 'disabled');
        });
    });
</script>
{% endblock %}
