{% extends 'base.html.twig' %}

{% block title %}Stopky{% endblock %}

{% block content %}
    <h1>Stopky</h1>

    <div class="container pb-4">
        <div class="row align-items-center justify-content-center gy-3 pb-3 text-center">
            <div class="col-lg-6 col-md-8 col-sm-10">
                <div
                    class="stopwatch countdown justify-content-center"
                    {% if active_stopwatch is not null %}
                        data-total-seconds="{{ active_stopwatch.totalSeconds }}"
                        data-stopwatch-start="{{ active_stopwatch.lastStart|date('Y-m-d H:i:s') }}"
                        data-stopwatch-status="{{ active_stopwatch.status.value }}"
                    {% endif %}
                >
                    <div class="countdown-hours rounded p-1 p-sm-2 p-lg-2">
                        <span id="stopwatch-hours" class="countdown-value">{% if active_stopwatch is not null %}{{ active_stopwatch.interval|hoursElapsed }}{% else %}00{% endif %}</span>
                        <span class="countdown-label text-muted">h</span>
                    </div>
                    <div class="countdown-minutes rounded p-1 p-sm-2 p-lg-2">
                        <span id="stopwatch-minutes" class="countdown-value">{% if active_stopwatch is not null %}{{ active_stopwatch.interval|minutesElapsed }}{% else %}00{% endif %}</span>
                        <span class="countdown-label text-muted">m</span>
                    </div>
                    <div class="countdown-seconds rounded p-1 p-sm-2 p-lg-2">
                        <span id="stopwatch-seconds" class="countdown-value">{% if active_stopwatch is not null %}{{ active_stopwatch.interval|secondsElapsed }}{% else %}00{% endif %}</span>
                        <span class="countdown-label text-muted">s</span>
                    </div>
                </div>

                {% if active_stopwatch is null %}
                    <a href="{{ path('start_stopwatch') }}" class="btn btn-success btn-lg">Start</a>
                {% elseif active_stopwatch.status.value is same as 'running' %}
                    <a href="{{ path('stop_stopwatch', {'stopwatchId': active_stopwatch.stopwatchId}) }}" class="btn btn-danger btn-lg">Stop</a>
                {% elseif active_stopwatch.status.value is same as 'paused' %}
                    <a href="{{ path('resume_stopwatch', {'stopwatchId': active_stopwatch.stopwatchId}) }}" class="btn btn-accent btn-lg">Pokračovat</a>

                    <p class="mt-3">
                        <a href="{{ path('reset_stopwatch', {'stopwatchId': active_stopwatch.stopwatchId}) }}" class="btn btn-outline-danger btn-sm">Vynulovat</a>
                        <a href="{{ path('save_stopwatch', {stopwatchId: active_stopwatch.stopwatchId}) }}" class="btn btn-sm btn-outline-success">Uložit čas</a>
                    </p>
                {% endif %}

                {#
                <div class="mt-4">
                    <button type="button" class="btn btn-sm btn-outline-danger">Vynulovat</button>

                    <button type="button" class="btn btn-sm btn-outline-success">Doskládáno?</button>
                </div>
                #}

                {#
                <div class="card border-0 shadow mt-4" style="max-width: 400px;margin-left: auto;margin-right: auto;">
                    <div class="card-body">
                        <h5 class="card-title">Co skládáš?</h5>
                        <p class="card-text fs-sm text-muted">Vyber z puzzlí, které už známe nebo si zaznamenej výrobce, počet dílků, název a klidně i fotku!</p>
                        <a href="#" class="btn btn-sm btn-outline-accent">Jasně, že skládám puzzle</a>
                    </div>
                </div>
                #}

            </div>

            <div class="col-lg-6 col-md-8 col-sm-10">
                <div class="px-2">
                    <img class="stopwatch-image" src="{{ asset('img/stopwatch.png') }}" alt="SpeedPuzzling Stopwatch">
                </div>
            </div>
        </div>
    </div>

    {% if stopwatches|length > 1 or (stopwatches|length is same as 1 and active_stopwatch is null)  %}
        <h3 class="mt-5">Další moje stopky</h3>

        <ul>
            {% for stopwatch in stopwatches %}
                {% if active_stopwatch is null or stopwatch.stopwatchId is not same as active_stopwatch.stopwatchId %}
                    <li>
                        <a href="{{ path('stopwatch', {stopwatchId: stopwatch.stopwatchId}) }}">
                            {{ stopwatch.interval|puzzlingTime }} ({{ stopwatch.status.title }})
                        </a>
                    </li>
                {% endif %}
            {% endfor %}
        </ul>
    {% endif %}

    {% if active_stopwatch is not null %}
        <script>
            let status = document.querySelector('[data-stopwatch-status]').getAttribute('data-stopwatch-status');

            console.log(window.navigator.wakeLock);

            document.addEventListener('DOMContentLoaded', () => {
                if (status === 'running') {
                    let wakeLock = null;

                    try {
                        wakeLock = window.navigator.wakeLock.request('screen');
                        console.log('Screen Wake Lock is active');
                    } catch (err) {
                        console.error(`${err.name}, ${err.message}`);
                    }

                    document.addEventListener('visibilitychange', async () => {
                        if (wakeLock !== null && document.visibilityState === 'visible') {
                            wakeLock = window.navigator.wakeLock.request('screen');
                        }
                    });
                }
            });

            function pad(number) {
                return number < 10 ? '0' + number : number;
            }

            function calculateTimeElapsed() {
                // Get the start time and total elapsed seconds from the data attributes
                const startTime = new Date(document.querySelector('[data-stopwatch-start]').getAttribute('data-stopwatch-start'));
                const totalElapsedSeconds = parseInt(document.querySelector('[data-total-seconds]').getAttribute('data-total-seconds'), 10);


                if (status !== 'running') {
                    return;
                }

                // Calculate the difference in seconds from now to the start time
                const now = new Date();
                const differenceInSeconds = Math.floor((now - startTime) / 1000) + totalElapsedSeconds;

                // Calculate hours, minutes, and seconds
                const hours = Math.floor(differenceInSeconds / 3600);
                const minutes = Math.floor((differenceInSeconds % 3600) / 60);
                const seconds = differenceInSeconds % 60;

                // Update the HTML elements
                document.getElementById('stopwatch-hours').textContent = pad(hours);
                document.getElementById('stopwatch-minutes').textContent = pad(minutes);
                document.getElementById('stopwatch-seconds').textContent = pad(seconds);
            }

            // Run the function every second
            setInterval(calculateTimeElapsed, 1000);
        </script>
    {% endif %}
{% endblock %}
